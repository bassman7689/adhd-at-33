{"version":3,"file":"component---src-pages-index-tsx-5100c37243ed703ec367.js","mappings":"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","sources":["webpack://adhd-at-33/./src/components/hero-image.tsx","webpack://adhd-at-33/./src/components/card.tsx","webpack://adhd-at-33/./src/pages/index.tsx","webpack://adhd-at-33/./src/utils/blog-path.ts","webpack://adhd-at-33/./src/utils/format-date.ts"],"sourcesContent":["import * as React from \"react\";\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nconst CaptionDiv = styled.div`\n  font-size: var(--caption-font-size);\n  text-align: center;\n`;\n\nconst HeroImage = ({\n  image,\n  alt,\n  creditContent,\n  style,\n}: {\n  image: IGatsbyImageData;\n  alt: string;\n  creditContent: string;\n  style: React.CSSProperties;\n}): React.ReactElement<any, any> | null => {\n  return (\n    <CaptionDiv style={style}>\n      <GatsbyImage image={image} alt={alt} />\n      <div dangerouslySetInnerHTML={{ __html: creditContent }} />\n    </CaptionDiv>\n  );\n};\n\nexport default HeroImage;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst CardDiv = styled.div`\n  width: 100%;\n  border-radius: 5px;\n  box-shadow: 0px 5px 10px -1px rgba(var(--background-shadow-color), 1);\n  padding: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  cursor: pointer;\n`;\n\ntype CardProps = {\n  children: React.ReactNode;\n  onClick: (event) => void;\n};\n\nexport function Card({\n  children,\n  onClick,\n}: CardProps): React.ReactElement<any, any> | null {\n  return <CardDiv onClick={onClick}> {children} </CardDiv>;\n}\n","import HeroImage from \"../components/hero-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"../components/card\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { blogPath } from \"../utils/blog-path\";\nimport { graphql, navigate, PageProps } from \"gatsby\";\nimport { withPageLayout } from \"../components/with-page-layout\";\n\nconst BlogHeroImage = styled(HeroImage)`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n`;\n\nconst BlogContent = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  overflow-wrap: break-word;\n  margin: auto;\n`;\n\nconst BlogTitle = styled.h2`\n  text-align: left;\n  font-weight: bold;\n  color: black;\n`;\n\nconst BlogExcerpt = styled.div`\n  justify-self: flex-end;\n`;\n\ntype BlogEntrySummaryProps = {\n  key: string;\n  readonly frontmatter: {\n    readonly date: string | null;\n    readonly slug: string | null;\n    readonly title: string | null;\n    readonly published: boolean | null;\n    readonly hero_image: IGatsbyImageData | null;\n    readonly hero_image_alt: string | null;\n    readonly hero_image_credit_content: string | null;\n  } | null;\n  readonly excerpt: string | null;\n};\n\nconst BlogEntrySummary = ({ frontmatter, excerpt }: BlogEntrySummaryProps) => {\n  if (frontmatter == null) {\n    return null;\n  }\n\n  const {\n    date,\n    slug,\n    title,\n    published,\n    hero_image,\n    hero_image_alt,\n    hero_image_credit_content,\n  } = frontmatter;\n  if (\n    !date ||\n    !slug ||\n    !title ||\n    !published ||\n    !hero_image ||\n    !hero_image_alt ||\n    !hero_image_credit_content\n  )\n    return null;\n\n  const postPath = blogPath(date, slug);\n\n  const handleCardClick = (postPath: string): ((event) => void) => {\n    return () => {\n      navigate(postPath);\n    };\n  };\n  return (\n    <Card onClick={handleCardClick(postPath)}>\n      <BlogHeroImage\n        image={hero_image.childImageSharp.gatsbyImageData}\n        alt={hero_image_alt}\n        creditContent={hero_image_credit_content}\n      />\n      <BlogContent>\n        <BlogTitle>{title}</BlogTitle>\n        <BlogExcerpt>{excerpt ? excerpt : <br />}</BlogExcerpt>\n      </BlogContent>\n    </Card>\n  );\n};\n\nconst IndexPage = ({ data }: PageProps<Queries.IndexPageQuery>) => {\n  const { nodes } = data?.allMarkdownRemark;\n  return (\n    <React.Fragment>\n      {nodes.map((node) => (\n        <BlogEntrySummary key={`node-${node?.frontmatter?.slug}`} {...node} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          date\n          slug\n          title\n          published\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(width: 300, layout: FIXED)\n            }\n          }\n          hero_image_alt\n          hero_image_credit_content\n        }\n        excerpt\n      }\n    }\n  }\n`;\n\nexport default withPageLayout(IndexPage);\n","import { formatDate } from \"./format-date\";\n\nexport function blogPath(ds: string, slug: string): string {\n  return formatDate(\n    ds,\n    (day, month, year) => `/${year}/${month}/${day}/${slug}`\n  );\n}\n","export type dateFormatFn = (day: string, month: string, year: string) => string;\n\nexport function padZero(n: number): string {\n  return n.toString().padStart(2, \"0\");\n}\n\nexport const defaultFmt: dateFormatFn = (day, month, year) => {\n  return `${month}/${day}/${year}`;\n};\n\nexport function formatDate(\n  ds: string,\n  fmtFn: dateFormatFn = defaultFmt\n): string {\n  const date = new Date(ds);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return fmtFn(padZero(day), padZero(month), year.toString());\n}\n"],"names":["CaptionDiv","styled","image","alt","creditContent","style","React","GatsbyImage","dangerouslySetInnerHTML","__html","CardDiv","Card","children","onClick","BlogHeroImage","HeroImage","withConfig","displayName","componentId","BlogContent","BlogTitle","BlogExcerpt","BlogEntrySummary","frontmatter","excerpt","date","slug","title","published","hero_image","hero_image_alt","hero_image_credit_content","postPath","ds","formatDate","day","month","year","blogPath","navigate","handleCardClick","childImageSharp","gatsbyImageData","withPageLayout","data","nodes","allMarkdownRemark","map","node","key","_node$frontmatter","padZero","n","toString","padStart","defaultFmt","fmtFn","Date","getDate","getMonth","getFullYear"],"sourceRoot":""}