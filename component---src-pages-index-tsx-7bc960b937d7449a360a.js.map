{"version":3,"file":"component---src-pages-index-tsx-7bc960b937d7449a360a.js","mappings":"kLAEO,SAASA,EAASC,EAAYC,GACnC,OAAOC,EAAAA,EAAAA,IACLF,GACA,SAACG,EAAKC,EAAOC,GAAb,UAA0BA,EAA1B,IAAkCD,EAAlC,IAA2CD,EAA3C,IAAkDF,CAFnC,GAIlB,C,cCOKK,EAAmB,SAAC,GAAoD,IAAlDC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,QACvC,GAAmB,MAAfD,EACF,OAAO,KAGT,IAAQE,EAAsBF,EAAtBE,KAAMR,EAAgBM,EAAhBN,KAAMS,EAAUH,EAAVG,MACpB,OAAKD,GAASR,GAASS,EAGrBC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,KAAMb,EAASU,EAAMR,IAAQS,GAChCC,EAAAA,cAAAA,IAAAA,KAAIH,GAAoBG,EAAAA,cAAAA,KAAAA,QALS,IANvC,EA0CA,GAAeE,EAAAA,EAAAA,IA1BF,SAAC,GAA2C,IAAzCC,EAAyC,EAAzCA,KACNC,GAAUD,aAAlB,EAAkBA,EAAME,mBAAhBD,MACR,OACEJ,EAAAA,cAACA,EAAAA,SAAD,KACGI,EAAME,KAAI,SAACC,GAAD,aACTP,EAAAA,cAACL,EAAD,eAAkBa,IAAG,SAAUD,SAAV,UAAUA,EAAMX,mBAAhB,aAAUa,EAAmBnB,OAAYiB,GAD/D,IAJP,G,uBC5BO,SAASG,EAAQC,GACtB,OAAOA,EAAEC,WAAWC,SAAS,EAAG,IAGlC,C,iCAAO,IAAMC,EAA2B,SAACtB,EAAKC,EAAOC,GACnD,OAAUD,EAAV,IAAmBD,EAAnB,IAA0BE,CADrB,EAIA,SAASH,EACdF,EACA0B,QACQ,IADRA,IAAAA,EAAsBD,GAEtB,IAAMhB,EAAO,IAAIkB,KAAK3B,GAChBG,EAAMM,EAAKmB,UACXxB,EAAQK,EAAKoB,WAAa,EAC1BxB,EAAOI,EAAKqB,cAClB,OAAOJ,EAAML,EAAQlB,GAAMkB,EAAQjB,GAAQC,EAAKkB,WACjD,C","sources":["webpack://adhd-at-33/./src/utils/blog-path.ts","webpack://adhd-at-33/./src/pages/index.tsx","webpack://adhd-at-33/./src/utils/format-date.ts"],"sourcesContent":["import { formatDate } from \"./format-date\";\n\nexport function blogPath(ds: string, slug: string): string {\n  return formatDate(\n    ds,\n    (day, month, year) => `/${year}/${month}/${day}/${slug}`\n  );\n}\n","import React from \"react\";\nimport { blogPath } from \"../utils/blog-path\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { withPageLayout } from \"../components/with-page-layout\";\n\ntype BlogEntrySummaryProps = {\n  frontmatter: {\n    date: string | null;\n    slug: string | null;\n    title: string | null;\n  } | null;\n  excerpt: string | null;\n};\n\nconst BlogEntrySummary = ({ frontmatter, excerpt }: BlogEntrySummaryProps) => {\n  if (frontmatter == null) {\n    return null;\n  }\n\n  const { date, slug, title } = frontmatter;\n  if (!date || !slug || !title) return null;\n\n  return (\n    <div>\n      <a href={blogPath(date, slug)}>{title}</a>\n      <p>{excerpt ? excerpt : <br />}</p>\n    </div>\n  );\n};\n\nconst Blog = ({ data }: PageProps<Queries.BlogQuery>) => {\n  const { nodes } = data?.allMarkdownRemark;\n  return (\n    <React.Fragment>\n      {nodes.map((node) => (\n        <BlogEntrySummary key={`node-${node?.frontmatter?.slug}`} {...node} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport const pageQuery = graphql`\n  query Blog {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          date\n          slug\n          title\n        }\n        excerpt\n      }\n    }\n  }\n`;\n\nexport default withPageLayout(Blog);\n","export type dateFormatFn = (day: string, month: string, year: string) => string;\n\nexport function padZero(n: number): string {\n  return n.toString().padStart(2, \"0\");\n}\n\nexport const defaultFmt: dateFormatFn = (day, month, year) => {\n  return `${month}/${day}/${year}`;\n};\n\nexport function formatDate(\n  ds: string,\n  fmtFn: dateFormatFn = defaultFmt\n): string {\n  const date = new Date(ds);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return fmtFn(padZero(day), padZero(month), year.toString());\n}\n"],"names":["blogPath","ds","slug","formatDate","day","month","year","BlogEntrySummary","frontmatter","excerpt","date","title","React","href","withPageLayout","data","nodes","allMarkdownRemark","map","node","key","_node$frontmatter","padZero","n","toString","padStart","defaultFmt","fmtFn","Date","getDate","getMonth","getFullYear"],"sourceRoot":""}