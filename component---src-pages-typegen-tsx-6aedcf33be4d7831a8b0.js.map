{"version":3,"file":"component---src-pages-typegen-tsx-6aedcf33be4d7831a8b0.js","mappings":"4IAsBA,WAAeA,EAAAA,EAAAA,IAlBK,SAAC,GAKT,QAJVC,EAIU,EAJVA,KAKA,OACEC,EAAAA,cAACA,EAAAA,SAAD,KACEA,EAAAA,cAAAA,IAAAA,KAAAA,eAAA,QAAAA,EAAgBD,EAAKE,YAArB,iBAAgBC,EAAWC,oBAA3B,aAAgBC,EAAyBC,OACzCL,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,KAAAA,iBACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAOM,KAAKC,UAAUR,EAAM,KAAM,KAZ1C,G","sources":["webpack://adhd-at-33/./src/pages/typegen.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { withPageLayout } from \"../components/with-page-layout\";\n\nconst TypegenPage = ({\n  data,\n}: PageProps<Queries.TypegenPageQuery>): React.ReactElement<\n  any,\n  any\n> | null => {\n  return (\n    <React.Fragment>\n      <p>Site title: {data.site?.siteMetadata?.title}</p>\n      <hr />\n      <p>Query Result:</p>\n      <pre>\n        <code>{JSON.stringify(data, null, 2)}</code>\n      </pre>\n    </React.Fragment>\n  );\n};\n\nexport default withPageLayout(TypegenPage);\n\nexport const query = graphql`\n  query TypegenPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["withPageLayout","data","React","site","_data$site","siteMetadata","_data$site$siteMetada","title","JSON","stringify"],"sourceRoot":""}